import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import apiService from '../services/api';
import { Brain, Zap, Users, BarChart3, Download, Smartphone, CheckCircle, Play, Menu, X, Search } from 'lucide-react';
import styles from '../styles/Home.module.css';

interface QuizCategory {
  id: number;
  title: string;
  description: string;
  ascended: true;
  thumbnailUrl?: string;
}

const Home = () => {
  const navigate = useNavigate();
  const [activeCategory, setActiveCategory] = useState('start');
  const [searchQuery, setSearchQuery] = useState('');
  const [quizzes, setQuizzes] = useState<QuizCategory[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [page, setPage] = useState(0);
  const [totalPages, setTotalPages] = useState(1);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [gamePin, setGamePin] = useState('');

  const categories = [
    { id: 'start', name: 'Trang ch·ªß', icon: 'üè†' },
    { id: 'art', name: 'Ngh·ªá thu·∫≠t', icon: 'üé®' },
    { id: 'entertainment', name: 'Gi·∫£i tr√≠', icon: '‚≠ê' },
    { id: 'geography', name: 'ƒê·ªãa l√Ω', icon: 'üåç' },
    { id: 'history', name: 'L·ªãch s·ª≠', icon: 'üèõÔ∏è' },
    { id: 'languages', name: 'Ng√¥n ng·ªØ', icon: 'üí¨' },
    { id: 'science', name: 'Khoa h·ªçc', icon: 'üî¨' },
    { id: 'sports', name: 'Th·ªÉ thao', icon: 'üèÄ' },
    { id: 'trivia', name: 'T·ªïng h·ª£p', icon: 'üí°' },
  ];

  useEffect(() => {
    const fetchQuizzes = async () => {
      try {
        setLoading(true);
        const response = await apiService.fetchQuizzes(0);
        if (response.success) {
          const quizzesFromApi = response.data.content as unknown as QuizCategory[];
          setQuizzes(quizzesFromApi);
          setTotalPages(response.data.totalPages);
        } else {
          setError(response.error || 'Kh√¥ng th·ªÉ l·∫•y danh s√°ch quiz');
        }
      } catch (err) {
        setError('L·ªói k·∫øt n·ªëi ƒë·∫øn server');
      } finally {
        setLoading(false);
      }
    };

    fetchQuizzes();
  }, [activeCategory]);

  const handleQuizClick = (quizId: number) => {
    navigate(`/quiz/${quizId}/join`);
  };

  const handleLoadMore = () => {
    if (page + 1 < totalPages) {
      setPage(prev => prev + 1);
    }
  };

  const filteredQuizzes = quizzes.filter(quiz =>
    quiz.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
    quiz.description.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className={styles['home-container']}>
      {/* Header */}
      <header className={styles.header}>
        <div className={styles.logo}>
          <span className={styles['logo-text']}>QUIZ</span>.com
        </div>
        <div className={styles['join-game-container']}>
          <strong>Tham gia quiz:</strong>
          <input
            type="text"
            placeholder="Nh·∫≠p m√£ PIN"
            value={gamePin}
            onChange={(e) => setGamePin(e.target.value)}
            className={styles['pin-input']}
          />
        </div>
        <div className={styles['header-actions']}>
          <button
            className={styles['sign-in-btn']}
            onClick={() => navigate('/login')}
          >
            ƒêƒÉng nh·∫≠p
          </button>
          <button
            className={styles['mobile-menu-toggle']}
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          >
            {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
        {mobileMenuOpen && (
          <div className={styles['mobile-menu']}>
            <div className={styles['join-game-container']}>
              <strong>Tham gia quiz:</strong>
              <input
                type="text"
                placeholder="Nh·∫≠p m√£ PIN"
                value={gamePin}
                onChange={(e) => setGamePin(e.target.value)}
                className={styles['pin-input']}
              />
            </div>
          </div>
        )}
      </header>

      {/* Categories */}
      <nav className={styles['categories-nav']}>
        {categories.map(category => (
          <button
            key={category.id}
            className={`${styles['category-btn']} ${activeCategory === category.id ? styles.active : ''}`}
            onClick={() => setActiveCategory(category.id)}
          >
            <div className={styles['category-icon']}>{category.icon}</div>
            <div>{category.name}</div>
          </button>
        ))}
      </nav>

      <main className="px-8">
        {/* Hero Section */}
        <section className={styles['hero-section']}>
          <div className={styles['hero-card']}>
            <div className={styles['hero-illustration']}>‚úçÔ∏è</div>
            <h2 className={styles['hero-title']}>T·∫°o quiz</h2>
            <p className={styles['hero-description']}>T·∫°o quiz th·ªß c√¥ng v·ªõi giao di·ªán ƒë∆°n gi·∫£n, d·ªÖ s·ª≠ d·ª•ng</p>
            <button
              className={styles['hero-btn-green']}
              onClick={() => navigate('/quiz/new')}
            >
              Quiz editor
            </button>
          </div>
          <div className={styles['hero-card']}>
            <div className={styles['hero-illustration']}>ü§ñ</div>
            <h2 className={styles['hero-title']}>AI Generator</h2>
            <p className={styles['hero-description']}>T·∫°o quiz t·ª± ƒë·ªông t·ª´ ch·ªß ƒë·ªÅ ho·∫∑c file PDF</p>
            <button
              className={styles['hero-btn-blue']}
              onClick={() => navigate('/quiz/generate')}
            >
              Quiz generator
            </button>
          </div>
        </section>

        {/* Features Section */}
        <section className={styles['features-section']}>
          <h2 className={styles['section-title']}>T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
          <div className={styles['features-grid']}>
            {[
              {
                icon: <Zap className="w-6 h-6 text-indigo-600" />,
                title: 'T·∫°o quiz t·ª± ƒë·ªông',
                description: 'AI t·ª± ƒë·ªông ƒë·ªÅ xu·∫•t c√¢u h·ªèi v√† ƒë√°p √°n ch·ªâ t·ª´ ti√™u ƒë·ªÅ b·∫°n nh·∫≠p, ti·∫øt ki·ªám th·ªùi gian so·∫°n b√†i.'
              },
              {
                icon: <Users className="w-6 h-6 text-indigo-600" />,
                title: 'Ch·∫ø ƒë·ªô nh√≥m/l·ªõp h·ªçc',
                description: 'T·∫°o ph√≤ng quiz ƒë·ªÉ h·ªçc sinh tham gia v√† l√†m b√†i tr·ª±c tuy·∫øn, t·ª± ƒë·ªông ch·∫•m ƒëi·ªÉm.'
              },
              {
                icon: <BarChart3 className="w-6 h-6 text-indigo-600" />,
                title: 'Ph√¢n t√≠ch k·∫øt qu·∫£',
                description: 'Th·ªëng k√™ chi ti·∫øt k·∫øt qu·∫£ l√†m b√†i c·ªßa h·ªçc vi√™n, gi√∫p ƒë√°nh gi√° hi·ªáu qu·∫£ gi·∫£ng d·∫°y.'
              },
              {
                icon: <Download className="w-6 h-6 text-indigo-600" />,
                title: 'Xu·∫•t file Word/PDF',
                description: 'T·∫£i quiz v·ªÅ m√°y d∆∞·ªõi d·∫°ng file Word ho·∫∑c PDF ƒë·ªÉ in ·∫•n ho·∫∑c ch·ªânh s·ª≠a th√™m.'
              },
              {
                icon: <Smartphone className="w-6 h-6 text-indigo-600" />,
                title: 'H·ªó tr·ª£ ƒëa n·ªÅn t·∫£ng',
                description: 'S·ª≠ d·ª•ng tr√™n m·ªçi thi·∫øt b·ªã: m√°y t√≠nh, ƒëi·ªán tho·∫°i, tablet v·ªõi giao di·ªán t·ªëi ∆∞u.'
              },
              {
                icon: <Brain className="w-6 h-6 text-indigo-600" />,
                title: 'T·∫°o quiz t·ª´ ·∫£nh',
                description: 'Upload ·∫£nh ch·ª•p t√†i li·ªáu ho·∫∑c s√°ch, AI s·∫Ω ph√¢n t√≠ch n·ªôi dung v√† t·ª± ƒë·ªông t·∫°o quiz.'
              }
            ].map((feature, index) => (
              <div key={index} className={styles['feature-card']}>
                <div className="flex items-center mb-4">
                  <div className={styles['feature-icon-container']}>{feature.icon}</div>
                  <h3 className={styles['feature-title']}>{feature.title}</h3>
                </div>
                <p className={styles['feature-description']}>{feature.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Benefits Section */}
        <section className={styles['benefits-section']}>
          <div className={styles['benefits-container']}>
            <div className={styles['benefits-text']}>
              <h2 className={styles['section-title']}>L·ª£i √≠ch khi s·ª≠ d·ª•ng Quiz AI</h2>
              <div className="space-y-4">
                {[
                  'Ti·∫øt ki·ªám th·ªùi gian t·∫°o quiz t·ª´ 70-90% so v·ªõi c√°ch th·ªß c√¥ng',
                  'Ch·∫•t l∆∞·ª£ng c√¢u h·ªèi cao, ƒëa d·∫°ng lo·∫°i c√¢u h·ªèi (tr·∫Øc nghi·ªám, t·ª± lu·∫≠n ng·∫Øn)',
                  'D·ªÖ d√†ng chia s·∫ª quiz v·ªõi b·∫°n b√®, h·ªçc sinh qua link ho·∫∑c m·∫°ng x√£ h·ªôi',
                  'Ph√π h·ª£p v·ªõi nhi·ªÅu ƒë·ªëi t∆∞·ª£ng t·ª´ h·ªçc sinh, sinh vi√™n ƒë·∫øn gi√°o vi√™n',
                  'H·ªó tr·ª£ nhi·ªÅu m√¥n h·ªçc t·ª´ khoa h·ªçc t·ª± nhi√™n ƒë·∫øn x√£ h·ªôi, ngo·∫°i ng·ªØ'
                ].map((benefit, index) => (
                  <div key={index} className={styles['benefit-item']}>
                    <CheckCircle className={styles['benefit-icon']} />
                    <span className="text-lg">{benefit}</span>
                  </div>
                ))}
              </div>
            </div>
            <div className={styles['benefits-image-container']}>
              <img
                src="https://via.placeholder.com/500x350/f3f4f6/6366f1?text=Quiz+AI+Benefits"
                alt="Quiz AI Benefits"
                className={styles['benefits-image']}
              />
            </div>
          </div>
        </section>

        {/* Quizzes Section */}
        <section className={styles['quizzes-section']}>
          <h2 className={styles['section-title']}>Quiz ƒë∆∞·ª£c t·∫°o g·∫ßn ƒë√¢y</h2>
          <div className={styles['search-container']}>
            <Search className={styles['search-icon']} />
            <input
              type="text"
              placeholder="T√¨m ki·∫øm quiz..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className={styles['search-input']}
            />
          </div>
          {loading && (
            <div className={styles.loading}>
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto"></div>
              <p className="mt-4">ƒêang t·∫£i...</p>
            </div>
          )}
          {error && (
            <div className={styles.error}>{error}</div>
          )}
          {!loading && !error && filteredQuizzes.length === 0 && (
            <div className="text-center py-12 text-gray-600">Kh√¥ng t√¨m th·∫•y quiz n√†o</div>
          )}
          <div className={styles['quizzes-grid']}>
            {filteredQuizzes.map(quiz => (
              <div
                key={quiz.id}
                className={styles['quiz-card']}
                onClick={() => handleQuizClick(quiz.id)}
              >
                <img
                  src={quiz.thumbnailUrl || 'https://via.placeholder.com/150'}
                  alt={quiz.title}
                  className={styles['quiz-image']}
                />
                <h3 className={styles['quiz-title']}>{quiz.title}</h3>
                <p className={styles['quiz-description']}>{quiz.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Target Audience Section */}
        <section className={styles['audience-section']}>
          <h2 className={styles['section-title']}>ƒê·ªëi t∆∞·ª£ng s·ª≠ d·ª•ng</h2>
          <div className={styles['audience-grid']}>
            {[
              {
                icon: 'üë®‚Äçüè´',
                title: 'Gi√°o vi√™n',
                description: 'T·∫°o b√†i ki·ªÉm tra nhanh ch√≥ng, thi·∫øt k·∫ø ƒë·ªÅ c∆∞∆°ng √¥n t·∫≠p, b√†i t·∫≠p v·ªÅ nh√† cho h·ªçc sinh v·ªõi nhi·ªÅu d·∫°ng c√¢u h·ªèi kh√°c nhau.'
              },
              {
                icon: 'üë®‚Äçüéì',
                title: 'H·ªçc sinh',
                description: 'T·ª± t·∫°o quiz ƒë·ªÉ √¥n t·∫≠p ki·∫øn th·ª©c, ki·ªÉm tra m·ª©c ƒë·ªô hi·ªÉu b√†i tr∆∞·ªõc khi thi, h·ªçc nh√≥m v·ªõi b·∫°n b√®.'
              },
              {
                icon: 'üéì',
                title: 'Sinh vi√™n',
                description: 'T·∫°o b·ªô c√¢u h·ªèi √¥n thi, th·∫ª ghi nh·ªõ (flashcards) t·ª´ t√†i li·ªáu h·ªçc, chia s·∫ª v·ªõi nh√≥m h·ªçc t·∫≠p.'
              },
              {
                icon: 'üè¢',
                title: 'Trung t√¢m ƒë√†o t·∫°o',
                description: 'X√¢y d·ª±ng ng√¢n h√†ng c√¢u h·ªèi, ƒë·ªÅ thi ƒë·∫ßu v√†o, ki·ªÉm tra ƒë·ªãnh k·ª≥ cho h·ªçc vi√™n v·ªõi giao di·ªán chuy√™n nghi·ªáp.'
              },
              {
                icon: 'üìö',
                title: 'Ng∆∞·ªùi t·ª± h·ªçc',
                description: 'T·∫°o quiz t·ª´ t√†i li·ªáu h·ªçc t·∫≠p c√° nh√¢n, ki·ªÉm tra ki·∫øn th·ª©c sau m·ªói b√†i h·ªçc, theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p.'
              }
            ].map((audience, index) => (
              <div key={index} className={styles['audience-card']}>
                <div className="flex items-center mb-4">
                  <div className={styles['audience-icon']}>{audience.icon}</div>
                  <h3 className={styles['audience-title']}>{audience.title}</h3>
                </div>
                <p className={styles['audience-description']}>{audience.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Final CTA */}
        <section className={styles['cta-section']}>
          <h2 className={styles['cta-title']}>S·∫µn s√†ng t·∫°o quiz v·ªõi AI?</h2>
          <p className={styles['cta-description']}>
            ƒêƒÉng k√Ω ngay ƒë·ªÉ tr·∫£i nghi·ªám c√¥ng c·ª• t·∫°o quiz th√¥ng minh gi√∫p b·∫°n ti·∫øt ki·ªám th·ªùi gian v√† n√¢ng cao hi·ªáu qu·∫£ h·ªçc t·∫≠p, gi·∫£ng d·∫°y.
          </p>
          <button
            className={styles['cta-btn']}
            onClick={() => navigate('/register')}
          >
            D√πng th·ª≠ mi·ªÖn ph√≠ ngay
          </button>
        </section>

        {/* Footer */}
        <footer className={styles.footer}>
          <div className={styles['footer-grid']}>
            <div className="md:col-span-1">
              <div className={styles['footer-logo']}>
                <Brain className="w-8 h-8 text-indigo-400" />
                <span className={styles['footer-logo-text']}>Quiz AI</span>
              </div>
              <p className={styles['footer-description']}>
                C√¥ng c·ª• t·∫°o quiz th√¥ng minh b·∫±ng tr√≠ tu·ªá nh√¢n t·∫°o d√†nh cho gi√°o d·ª•c v√† ƒë√†o t·∫°o.
              </p>
            </div>
            <div>
              <h4 className={styles['footer-heading']}>Li√™n k·∫øt</h4>
              <ul className={styles['footer-links']}>
                <li><a href="#" className={styles['footer-links']}>Trang ch·ªß</a></li>
                <li><a href="#" className={styles['footer-links']}>T√≠nh nƒÉng</a></li>
                <li><a href="#" className={styles['footer-links']}>Gi√° c·∫£</a></li>
                <li><a href="#" className={styles['footer-links']}>Blog</a></li>
              </ul>
            </div>
            <div>
              <h4 className={styles['footer-heading']}>H·ªó tr·ª£</h4>
              <ul className={styles['footer-links']}>
                <li><a href="#" className={styles['footer-links']}>Trung t√¢m tr·ª£ gi√∫p</a></li>
                <li><a href="#" className={styles['footer-links']}>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</a></li>
                <li><a href="#" className={styles['footer-links']}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</a></li>
              </ul>
            </div>
            <div>
              <h4 className={styles['footer-heading']}>Li√™n h·ªá</h4>
              <ul className={styles['footer-links']}>
                <li className="flex items-start">
                  <span className="mr-2">üìß</span>
                  support@quizaiapp.com
                </li>
                <li className="flex items-start">
                  <span className="mr-2">üìû</span>
                  1900 1234
                </li>
                <li className="flex items-start">
                  <span className="mr-2">üìç</span>
                  T√≤a nh√† A, 123 ƒê∆∞·ªùng ABC, H√† N·ªôi
                </li>
              </ul>
            </div>
          </div>
          <div className={styles['footer-bottom']}>
            <p>¬© 2023 Quiz AI. All rights reserved.</p>
            <div className={styles['footer-bottom-links']}>
              <a href="#" className={styles['footer-links']}>ƒêi·ªÅu kho·∫£n</a>
              <a href="#" className={styles['footer-links']}>Ch√≠nh s√°ch b·∫£o m·∫≠t</a>
            </div>
          </div>
        </footer>
      </main>
    </div>
  );
};

export default Home;